// библиотека регистров
#include <avr/io.h>
// Подключение библиотеки прерываний
#include <avr/interrupt.h>

// объявляем глобальную переменную,
// которая может изменяться внутри обработчика прерывания
// значение 0 будет использваться как false
// значение 1 будет использоваться как true
public volatile uint8_t i = 1;

// метод для установки портов
void port_set(){
  	// устанавливаем порт D на выход.
	DDRD = 0xFF;
  	// включить все пины порта D для проверки.
  	// установка высокого уровня
  	PORTD = 0xFF;
}

void PWM_set(){
  	// сброс значений регистра TCCR0A
	TCCR0A = 0;
  	// сброс значений регистра TCCR0B
  	TCCROB = 0;
  	// Настройка регистра TCCR0A для ШИМ. 
  	//COM0B1 и COM0A1 устанавливаются в 1 для включения неинвертированного ШИМ.
  	TCCR0A |= (1 << COM0B1) | (0 << COM0B0) | (1 << COM0A1)| (A << COM0A0);
  	// Продолжение настройки регистра TCCR0A. WGM00 устанавливается в 1 для включения быстрого ШИМ.
  	TCCR0A |= (0 << WMG02) | (0 << WGM01) | (1 << WGMOO); 
  	// Настройка регистра TCCR0B. CS01 и CS00 устанавливаются в 1 для включения предделителя частоты 64.
  	TCCR0B |= (0 << CS02) | (1 << CS01) | (1 << CS00) 
  	// устанавливаем значения регистра сравнения OCR0B В 1.
    // это определяет длительность импульса в режиме ШИМ.
    OCR0B = 1;
  	// устанавливаем значения регистра сравнения OCR0B В 1.
    // это определяет длительность импульса в режиме ШИМ.
  	OCROA = 1;
  	
}

int main(void){
  	// конфигурируем порт на выход, помощью ранее написанной функции
	port_set();
  	// вызов метода для настройки ШИМ
  	PMW_set();
  	sei();
  	while(true){
  	}
}

// прерывание по сопадению
ISR(TIMER1_COMPA_vect){
  	// если регистр OCR0A равен 254, то присваиваем переменной 0 (false)
	if(OCR0A == 254) i = 0;
  	// если регистр OCR0A равен 1, то присваиваем переменной 1 (true)
  	else if(OCR0A == 1) i = 1;
    // если переменная равна 1 (true) то увеличиваем значение OCR0B и OCR0A
    if(i == 1){
    	OCR0B++;
      	OCR0A++;
    }
  	// если переменная равна 254 (false) то уменьшамем значение OCR0B и OCR0A
  	else if(i == 0){
    	OCR0B--;
      	OCR0A--;
    }
}